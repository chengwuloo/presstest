// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: Longhu.Message.proto

package Longhu

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type SUBID int32

const (
	SUBID_SUB_BEGIN                SUBID = 0
	SUBID_SUB_C_PLACE_JETTON       SUBID = 100
	SUBID_SUB_C_QUERY_PLAYERLIST   SUBID = 103
	SUBID_SUB_C_SYNC_DESK          SUBID = 143
	SUBID_SUB_C_SYNC_TIME          SUBID = 104
	SUBID_SUB_S_SYNC_TIME          SUBID = 105
	SUBID_SUB_S_GAME_FREE          SUBID = 120
	SUBID_SUB_S_GAME_START         SUBID = 121
	SUBID_SUB_S_PLACE_JETTON       SUBID = 122
	SUBID_SUB_S_GAME_END           SUBID = 123
	SUBID_SUB_S_SEND_RECORD        SUBID = 127
	SUBID_SUB_S_PLACE_JET_FAIL     SUBID = 128
	SUBID_SUB_S_QUERY_PLAYLIST     SUBID = 130
	SUBID_SUB_S_START_PLACE_JETTON SUBID = 139
	SUBID_SUB_S_JETTON_BROADCAST   SUBID = 114
)

var SUBID_name = map[int32]string{
	0:   "SUB_BEGIN",
	100: "SUB_C_PLACE_JETTON",
	103: "SUB_C_QUERY_PLAYERLIST",
	143: "SUB_C_SYNC_DESK",
	104: "SUB_C_SYNC_TIME",
	105: "SUB_S_SYNC_TIME",
	120: "SUB_S_GAME_FREE",
	121: "SUB_S_GAME_START",
	122: "SUB_S_PLACE_JETTON",
	123: "SUB_S_GAME_END",
	127: "SUB_S_SEND_RECORD",
	128: "SUB_S_PLACE_JET_FAIL",
	130: "SUB_S_QUERY_PLAYLIST",
	139: "SUB_S_START_PLACE_JETTON",
	114: "SUB_S_JETTON_BROADCAST",
}

var SUBID_value = map[string]int32{
	"SUB_BEGIN":                0,
	"SUB_C_PLACE_JETTON":       100,
	"SUB_C_QUERY_PLAYERLIST":   103,
	"SUB_C_SYNC_DESK":          143,
	"SUB_C_SYNC_TIME":          104,
	"SUB_S_SYNC_TIME":          105,
	"SUB_S_GAME_FREE":          120,
	"SUB_S_GAME_START":         121,
	"SUB_S_PLACE_JETTON":       122,
	"SUB_S_GAME_END":           123,
	"SUB_S_SEND_RECORD":        127,
	"SUB_S_PLACE_JET_FAIL":     128,
	"SUB_S_QUERY_PLAYLIST":     130,
	"SUB_S_START_PLACE_JETTON": 139,
	"SUB_S_JETTON_BROADCAST":   114,
}

func (x SUBID) Enum() *SUBID {
	p := new(SUBID)
	*p = x
	return p
}

func (x SUBID) String() string {
	return proto.EnumName(SUBID_name, int32(x))
}

func (x *SUBID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SUBID_value, data, "SUBID")
	if err != nil {
		return err
	}
	*x = SUBID(value)
	return nil
}

func (SUBID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{0}
}

type JET_AREA int32

const (
	JET_AREA_AREA_BEGIN JET_AREA = 0
	JET_AREA_AREA_HEE   JET_AREA = 1
	JET_AREA_AREA_LONG  JET_AREA = 2
	JET_AREA_AREA_HU    JET_AREA = 3
	JET_AREA_AREA_MAX   JET_AREA = 4
)

var JET_AREA_name = map[int32]string{
	0: "AREA_BEGIN",
	1: "AREA_HEE",
	2: "AREA_LONG",
	3: "AREA_HU",
	4: "AREA_MAX",
}

var JET_AREA_value = map[string]int32{
	"AREA_BEGIN": 0,
	"AREA_HEE":   1,
	"AREA_LONG":  2,
	"AREA_HU":    3,
	"AREA_MAX":   4,
}

func (x JET_AREA) Enum() *JET_AREA {
	p := new(JET_AREA)
	*p = x
	return p
}

func (x JET_AREA) String() string {
	return proto.EnumName(JET_AREA_name, int32(x))
}

func (x *JET_AREA) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(JET_AREA_value, data, "JET_AREA")
	if err != nil {
		return err
	}
	*x = JET_AREA(value)
	return nil
}

func (JET_AREA) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{1}
}

type CARD_GROUP_TYEP int32

const (
	CARD_GROUP_TYEP_BEGIN CARD_GROUP_TYEP = 0
	CARD_GROUP_TYEP_HEE   CARD_GROUP_TYEP = 1
	CARD_GROUP_TYEP_LONG  CARD_GROUP_TYEP = 2
	CARD_GROUP_TYEP_HU    CARD_GROUP_TYEP = 3
	CARD_GROUP_TYEP_END   CARD_GROUP_TYEP = 4
)

var CARD_GROUP_TYEP_name = map[int32]string{
	0: "BEGIN",
	1: "HEE",
	2: "LONG",
	3: "HU",
	4: "END",
}

var CARD_GROUP_TYEP_value = map[string]int32{
	"BEGIN": 0,
	"HEE":   1,
	"LONG":  2,
	"HU":    3,
	"END":   4,
}

func (x CARD_GROUP_TYEP) Enum() *CARD_GROUP_TYEP {
	p := new(CARD_GROUP_TYEP)
	*p = x
	return p
}

func (x CARD_GROUP_TYEP) String() string {
	return proto.EnumName(CARD_GROUP_TYEP_name, int32(x))
}

func (x *CARD_GROUP_TYEP) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CARD_GROUP_TYEP_value, data, "CARD_GROUP_TYEP")
	if err != nil {
		return err
	}
	*x = CARD_GROUP_TYEP(value)
	return nil
}

func (CARD_GROUP_TYEP) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{2}
}

type CMD_S_Jetton_Broadcast struct {
	AllJettonScore []int64 `protobuf:"varint,1,rep,name=AllJettonScore" json:"AllJettonScore,omitempty"`
	TmpJettonScore []int64 `protobuf:"varint,2,rep,name=tmpJettonScore" json:"tmpJettonScore,omitempty"`
}

func (m *CMD_S_Jetton_Broadcast) Reset()         { *m = CMD_S_Jetton_Broadcast{} }
func (m *CMD_S_Jetton_Broadcast) String() string { return proto.CompactTextString(m) }
func (*CMD_S_Jetton_Broadcast) ProtoMessage()    {}
func (*CMD_S_Jetton_Broadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{0}
}
func (m *CMD_S_Jetton_Broadcast) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_S_Jetton_Broadcast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_S_Jetton_Broadcast.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_S_Jetton_Broadcast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_S_Jetton_Broadcast.Merge(m, src)
}
func (m *CMD_S_Jetton_Broadcast) XXX_Size() int {
	return m.Size()
}
func (m *CMD_S_Jetton_Broadcast) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_S_Jetton_Broadcast.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_S_Jetton_Broadcast proto.InternalMessageInfo

func (m *CMD_S_Jetton_Broadcast) GetAllJettonScore() []int64 {
	if m != nil {
		return m.AllJettonScore
	}
	return nil
}

func (m *CMD_S_Jetton_Broadcast) GetTmpJettonScore() []int64 {
	if m != nil {
		return m.TmpJettonScore
	}
	return nil
}

// 玩家下注.
type CMD_C_PlaceJet struct {
	CbJettonArea int32 `protobuf:"varint,1,req,name=cbJettonArea" json:"cbJettonArea"`
	LJettonScore int64 `protobuf:"varint,2,req,name=lJettonScore" json:"lJettonScore"`
}

func (m *CMD_C_PlaceJet) Reset()         { *m = CMD_C_PlaceJet{} }
func (m *CMD_C_PlaceJet) String() string { return proto.CompactTextString(m) }
func (*CMD_C_PlaceJet) ProtoMessage()    {}
func (*CMD_C_PlaceJet) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{1}
}
func (m *CMD_C_PlaceJet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_C_PlaceJet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_C_PlaceJet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_C_PlaceJet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_C_PlaceJet.Merge(m, src)
}
func (m *CMD_C_PlaceJet) XXX_Size() int {
	return m.Size()
}
func (m *CMD_C_PlaceJet) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_C_PlaceJet.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_C_PlaceJet proto.InternalMessageInfo

func (m *CMD_C_PlaceJet) GetCbJettonArea() int32 {
	if m != nil {
		return m.CbJettonArea
	}
	return 0
}

func (m *CMD_C_PlaceJet) GetLJettonScore() int64 {
	if m != nil {
		return m.LJettonScore
	}
	return 0
}

type PlaceJettonScore struct {
	DwUserID     int64 `protobuf:"varint,1,req,name=dwUserID" json:"dwUserID"`
	LJettonScore int64 `protobuf:"varint,2,req,name=lJettonScore" json:"lJettonScore"`
	LJettonArea  int32 `protobuf:"varint,3,req,name=lJettonArea" json:"lJettonArea"`
}

func (m *PlaceJettonScore) Reset()         { *m = PlaceJettonScore{} }
func (m *PlaceJettonScore) String() string { return proto.CompactTextString(m) }
func (*PlaceJettonScore) ProtoMessage()    {}
func (*PlaceJettonScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{2}
}
func (m *PlaceJettonScore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlaceJettonScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlaceJettonScore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlaceJettonScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaceJettonScore.Merge(m, src)
}
func (m *PlaceJettonScore) XXX_Size() int {
	return m.Size()
}
func (m *PlaceJettonScore) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaceJettonScore.DiscardUnknown(m)
}

var xxx_messageInfo_PlaceJettonScore proto.InternalMessageInfo

func (m *PlaceJettonScore) GetDwUserID() int64 {
	if m != nil {
		return m.DwUserID
	}
	return 0
}

func (m *PlaceJettonScore) GetLJettonScore() int64 {
	if m != nil {
		return m.LJettonScore
	}
	return 0
}

func (m *PlaceJettonScore) GetLJettonArea() int32 {
	if m != nil {
		return m.LJettonArea
	}
	return 0
}

type CardGroup struct {
	GroupId  int32   `protobuf:"varint,1,req,name=group_id,json=groupId" json:"group_id"`
	Cards    []int32 `protobuf:"varint,2,rep,name=Cards" json:"Cards,omitempty"`
	CardType int32   `protobuf:"varint,3,opt,name=CardType" json:"CardType"`
}

func (m *CardGroup) Reset()         { *m = CardGroup{} }
func (m *CardGroup) String() string { return proto.CompactTextString(m) }
func (*CardGroup) ProtoMessage()    {}
func (*CardGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{3}
}
func (m *CardGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CardGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CardGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CardGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardGroup.Merge(m, src)
}
func (m *CardGroup) XXX_Size() int {
	return m.Size()
}
func (m *CardGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_CardGroup.DiscardUnknown(m)
}

var xxx_messageInfo_CardGroup proto.InternalMessageInfo

func (m *CardGroup) GetGroupId() int32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *CardGroup) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *CardGroup) GetCardType() int32 {
	if m != nil {
		return m.CardType
	}
	return 0
}

// 获取玩家列表.
type CMD_C_PlayerList struct {
	NLimitCount int32 `protobuf:"varint,1,req,name=nLimitCount" json:"nLimitCount"`
	NBeginIndex int32 `protobuf:"varint,2,opt,name=nBeginIndex" json:"nBeginIndex"`
}

func (m *CMD_C_PlayerList) Reset()         { *m = CMD_C_PlayerList{} }
func (m *CMD_C_PlayerList) String() string { return proto.CompactTextString(m) }
func (*CMD_C_PlayerList) ProtoMessage()    {}
func (*CMD_C_PlayerList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{4}
}
func (m *CMD_C_PlayerList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_C_PlayerList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_C_PlayerList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_C_PlayerList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_C_PlayerList.Merge(m, src)
}
func (m *CMD_C_PlayerList) XXX_Size() int {
	return m.Size()
}
func (m *CMD_C_PlayerList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_C_PlayerList.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_C_PlayerList proto.InternalMessageInfo

func (m *CMD_C_PlayerList) GetNLimitCount() int32 {
	if m != nil {
		return m.NLimitCount
	}
	return 0
}

func (m *CMD_C_PlayerList) GetNBeginIndex() int32 {
	if m != nil {
		return m.NBeginIndex
	}
	return 0
}

//获取玩家列表返回.
type PlayerListItem struct {
	DwUserID         int64  `protobuf:"varint,1,req,name=dwUserID" json:"dwUserID"`
	HeaderID         int32  `protobuf:"varint,2,req,name=headerID" json:"headerID"`
	LUserScore       int64  `protobuf:"varint,3,req,name=lUserScore" json:"lUserScore"`
	NickName         string `protobuf:"bytes,4,opt,name=nickName" json:"nickName"`
	LTwentyWinScore  int64  `protobuf:"varint,5,opt,name=lTwentyWinScore" json:"lTwentyWinScore"`
	LTwentyWinCount  int32  `protobuf:"varint,6,opt,name=lTwentyWinCount" json:"lTwentyWinCount"`
	IsdivineMath     int32  `protobuf:"varint,7,opt,name=isdivineMath" json:"isdivineMath"`
	Index            int32  `protobuf:"varint,8,opt,name=Index" json:"Index"`
	IsBanker         int32  `protobuf:"varint,9,opt,name=isBanker" json:"isBanker"`
	IsApplyBanker    int32  `protobuf:"varint,10,opt,name=isApplyBanker" json:"isApplyBanker"`
	ApplyBankerMulti int32  `protobuf:"varint,11,opt,name=ApplyBankerMulti" json:"ApplyBankerMulti"`
	LJetton          int32  `protobuf:"varint,12,opt,name=lJetton" json:"lJetton"`
	SzLocation       string `protobuf:"bytes,13,opt,name=szLocation" json:"szLocation"`
}

func (m *PlayerListItem) Reset()         { *m = PlayerListItem{} }
func (m *PlayerListItem) String() string { return proto.CompactTextString(m) }
func (*PlayerListItem) ProtoMessage()    {}
func (*PlayerListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{5}
}
func (m *PlayerListItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerListItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerListItem.Merge(m, src)
}
func (m *PlayerListItem) XXX_Size() int {
	return m.Size()
}
func (m *PlayerListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerListItem.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerListItem proto.InternalMessageInfo

func (m *PlayerListItem) GetDwUserID() int64 {
	if m != nil {
		return m.DwUserID
	}
	return 0
}

func (m *PlayerListItem) GetHeaderID() int32 {
	if m != nil {
		return m.HeaderID
	}
	return 0
}

func (m *PlayerListItem) GetLUserScore() int64 {
	if m != nil {
		return m.LUserScore
	}
	return 0
}

func (m *PlayerListItem) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *PlayerListItem) GetLTwentyWinScore() int64 {
	if m != nil {
		return m.LTwentyWinScore
	}
	return 0
}

func (m *PlayerListItem) GetLTwentyWinCount() int32 {
	if m != nil {
		return m.LTwentyWinCount
	}
	return 0
}

func (m *PlayerListItem) GetIsdivineMath() int32 {
	if m != nil {
		return m.IsdivineMath
	}
	return 0
}

func (m *PlayerListItem) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PlayerListItem) GetIsBanker() int32 {
	if m != nil {
		return m.IsBanker
	}
	return 0
}

func (m *PlayerListItem) GetIsApplyBanker() int32 {
	if m != nil {
		return m.IsApplyBanker
	}
	return 0
}

func (m *PlayerListItem) GetApplyBankerMulti() int32 {
	if m != nil {
		return m.ApplyBankerMulti
	}
	return 0
}

func (m *PlayerListItem) GetLJetton() int32 {
	if m != nil {
		return m.LJetton
	}
	return 0
}

func (m *PlayerListItem) GetSzLocation() string {
	if m != nil {
		return m.SzLocation
	}
	return ""
}

type PlaceJetInfo struct {
	LJettonType  int32 `protobuf:"varint,1,req,name=lJettonType" json:"lJettonType"`
	LJettonCount int32 `protobuf:"varint,2,req,name=lJettonCount" json:"lJettonCount"`
	LJettonArea  int32 `protobuf:"varint,3,req,name=lJettonArea" json:"lJettonArea"`
}

func (m *PlaceJetInfo) Reset()         { *m = PlaceJetInfo{} }
func (m *PlaceJetInfo) String() string { return proto.CompactTextString(m) }
func (*PlaceJetInfo) ProtoMessage()    {}
func (*PlaceJetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{6}
}
func (m *PlaceJetInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlaceJetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlaceJetInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlaceJetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaceJetInfo.Merge(m, src)
}
func (m *PlaceJetInfo) XXX_Size() int {
	return m.Size()
}
func (m *PlaceJetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaceJetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PlaceJetInfo proto.InternalMessageInfo

func (m *PlaceJetInfo) GetLJettonType() int32 {
	if m != nil {
		return m.LJettonType
	}
	return 0
}

func (m *PlaceJetInfo) GetLJettonCount() int32 {
	if m != nil {
		return m.LJettonCount
	}
	return 0
}

func (m *PlaceJetInfo) GetLJettonArea() int32 {
	if m != nil {
		return m.LJettonArea
	}
	return 0
}

type GameDeskInfo struct {
	LAllJettonScore       []*PlaceJettonScore `protobuf:"bytes,1,rep,name=lAllJettonScore" json:"lAllJettonScore,omitempty"`
	SelfJettonScore       []*PlaceJettonScore `protobuf:"bytes,2,rep,name=SelfJettonScore" json:"SelfJettonScore,omitempty"`
	DivineJettonScore     []*PlaceJettonScore `protobuf:"bytes,3,rep,name=divineJettonScore" json:"divineJettonScore,omitempty"`
	LApplyBankerCondition int64               `protobuf:"varint,4,req,name=lApplyBankerCondition" json:"lApplyBankerCondition"`
	LAreaLimitScore       int64               `protobuf:"varint,5,req,name=lAreaLimitScore" json:"lAreaLimitScore"`
	Cards                 []*CardGroup        `protobuf:"bytes,6,rep,name=Cards" json:"Cards,omitempty"`
	Players               []*PlayerListItem   `protobuf:"bytes,7,rep,name=players" json:"players,omitempty"`
	//庄家信息
	WBankerChairID    int32           `protobuf:"varint,8,req,name=wBankerChairID" json:"wBankerChairID"`
	CbBankerTimes     int32           `protobuf:"varint,9,req,name=cbBankerTimes" json:"cbBankerTimes"`
	LBankerWinScore   int64           `protobuf:"varint,10,req,name=lBankerWinScore" json:"lBankerWinScore"`
	LBankerScore      int64           `protobuf:"varint,11,req,name=lBankerScore" json:"lBankerScore"`
	BEnableSysBanker  bool            `protobuf:"varint,12,req,name=bEnableSysBanker" json:"bEnableSysBanker"`
	SzGameRoomName    string          `protobuf:"bytes,13,opt,name=szGameRoomName" json:"szGameRoomName"`
	WinTag            int32           `protobuf:"varint,14,req,name=winTag" json:"winTag"`
	WinCardGroupType  int32           `protobuf:"varint,15,req,name=winCardGroupType" json:"winCardGroupType"`
	JetInfo           []*PlaceJetInfo `protobuf:"bytes,16,rep,name=JetInfo" json:"JetInfo,omitempty"`
	LOnlinePopulation int32           `protobuf:"varint,17,req,name=lOnlinePopulation" json:"lOnlinePopulation"`
}

func (m *GameDeskInfo) Reset()         { *m = GameDeskInfo{} }
func (m *GameDeskInfo) String() string { return proto.CompactTextString(m) }
func (*GameDeskInfo) ProtoMessage()    {}
func (*GameDeskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{7}
}
func (m *GameDeskInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GameDeskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GameDeskInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GameDeskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameDeskInfo.Merge(m, src)
}
func (m *GameDeskInfo) XXX_Size() int {
	return m.Size()
}
func (m *GameDeskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GameDeskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GameDeskInfo proto.InternalMessageInfo

func (m *GameDeskInfo) GetLAllJettonScore() []*PlaceJettonScore {
	if m != nil {
		return m.LAllJettonScore
	}
	return nil
}

func (m *GameDeskInfo) GetSelfJettonScore() []*PlaceJettonScore {
	if m != nil {
		return m.SelfJettonScore
	}
	return nil
}

func (m *GameDeskInfo) GetDivineJettonScore() []*PlaceJettonScore {
	if m != nil {
		return m.DivineJettonScore
	}
	return nil
}

func (m *GameDeskInfo) GetLApplyBankerCondition() int64 {
	if m != nil {
		return m.LApplyBankerCondition
	}
	return 0
}

func (m *GameDeskInfo) GetLAreaLimitScore() int64 {
	if m != nil {
		return m.LAreaLimitScore
	}
	return 0
}

func (m *GameDeskInfo) GetCards() []*CardGroup {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *GameDeskInfo) GetPlayers() []*PlayerListItem {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *GameDeskInfo) GetWBankerChairID() int32 {
	if m != nil {
		return m.WBankerChairID
	}
	return 0
}

func (m *GameDeskInfo) GetCbBankerTimes() int32 {
	if m != nil {
		return m.CbBankerTimes
	}
	return 0
}

func (m *GameDeskInfo) GetLBankerWinScore() int64 {
	if m != nil {
		return m.LBankerWinScore
	}
	return 0
}

func (m *GameDeskInfo) GetLBankerScore() int64 {
	if m != nil {
		return m.LBankerScore
	}
	return 0
}

func (m *GameDeskInfo) GetBEnableSysBanker() bool {
	if m != nil {
		return m.BEnableSysBanker
	}
	return false
}

func (m *GameDeskInfo) GetSzGameRoomName() string {
	if m != nil {
		return m.SzGameRoomName
	}
	return ""
}

func (m *GameDeskInfo) GetWinTag() int32 {
	if m != nil {
		return m.WinTag
	}
	return 0
}

func (m *GameDeskInfo) GetWinCardGroupType() int32 {
	if m != nil {
		return m.WinCardGroupType
	}
	return 0
}

func (m *GameDeskInfo) GetJetInfo() []*PlaceJetInfo {
	if m != nil {
		return m.JetInfo
	}
	return nil
}

func (m *GameDeskInfo) GetLOnlinePopulation() int32 {
	if m != nil {
		return m.LOnlinePopulation
	}
	return 0
}

// 空闲状态下的场景消息. 没有空闲状态
type CMD_Scene_StatusFree struct {
	DeskData *GameDeskInfo `protobuf:"bytes,1,req,name=DeskData" json:"DeskData,omitempty"`
	//全局信息
	CbTimeLeave int32 `protobuf:"varint,2,req,name=cbTimeLeave" json:"cbTimeLeave"`
	//玩家信息
	LUserMaxScore int64 `protobuf:"varint,3,req,name=lUserMaxScore" json:"lUserMaxScore"`
	//房间信息
	LUserScore     int64  `protobuf:"varint,4,req,name=lUserScore" json:"lUserScore"`
	SzGameRoomName string `protobuf:"bytes,5,opt,name=szGameRoomName" json:"szGameRoomName"`
}

func (m *CMD_Scene_StatusFree) Reset()         { *m = CMD_Scene_StatusFree{} }
func (m *CMD_Scene_StatusFree) String() string { return proto.CompactTextString(m) }
func (*CMD_Scene_StatusFree) ProtoMessage()    {}
func (*CMD_Scene_StatusFree) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{8}
}
func (m *CMD_Scene_StatusFree) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_Scene_StatusFree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_Scene_StatusFree.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_Scene_StatusFree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_Scene_StatusFree.Merge(m, src)
}
func (m *CMD_Scene_StatusFree) XXX_Size() int {
	return m.Size()
}
func (m *CMD_Scene_StatusFree) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_Scene_StatusFree.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_Scene_StatusFree proto.InternalMessageInfo

func (m *CMD_Scene_StatusFree) GetDeskData() *GameDeskInfo {
	if m != nil {
		return m.DeskData
	}
	return nil
}

func (m *CMD_Scene_StatusFree) GetCbTimeLeave() int32 {
	if m != nil {
		return m.CbTimeLeave
	}
	return 0
}

func (m *CMD_Scene_StatusFree) GetLUserMaxScore() int64 {
	if m != nil {
		return m.LUserMaxScore
	}
	return 0
}

func (m *CMD_Scene_StatusFree) GetLUserScore() int64 {
	if m != nil {
		return m.LUserScore
	}
	return 0
}

func (m *CMD_Scene_StatusFree) GetSzGameRoomName() string {
	if m != nil {
		return m.SzGameRoomName
	}
	return ""
}

// 命令: 开始游戏消息.
type CMD_S_GameStart struct {
	//富豪列表[5].
	DeskData        *GameDeskInfo `protobuf:"bytes,1,req,name=DeskData" json:"DeskData,omitempty"`
	CbTimeLeave     int32         `protobuf:"varint,2,req,name=cbTimeLeave" json:"cbTimeLeave"`
	NChipRobotCount int32         `protobuf:"varint,3,req,name=nChipRobotCount" json:"nChipRobotCount"`
	LUserMaxScore   int64         `protobuf:"varint,4,req,name=lUserMaxScore" json:"lUserMaxScore"`
	LUserScore      int64         `protobuf:"varint,5,req,name=lUserScore" json:"lUserScore"`
	NRoundCount     int32         `protobuf:"varint,6,req,name=nRoundCount" json:"nRoundCount"`
}

func (m *CMD_S_GameStart) Reset()         { *m = CMD_S_GameStart{} }
func (m *CMD_S_GameStart) String() string { return proto.CompactTextString(m) }
func (*CMD_S_GameStart) ProtoMessage()    {}
func (*CMD_S_GameStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{9}
}
func (m *CMD_S_GameStart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_S_GameStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_S_GameStart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_S_GameStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_S_GameStart.Merge(m, src)
}
func (m *CMD_S_GameStart) XXX_Size() int {
	return m.Size()
}
func (m *CMD_S_GameStart) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_S_GameStart.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_S_GameStart proto.InternalMessageInfo

func (m *CMD_S_GameStart) GetDeskData() *GameDeskInfo {
	if m != nil {
		return m.DeskData
	}
	return nil
}

func (m *CMD_S_GameStart) GetCbTimeLeave() int32 {
	if m != nil {
		return m.CbTimeLeave
	}
	return 0
}

func (m *CMD_S_GameStart) GetNChipRobotCount() int32 {
	if m != nil {
		return m.NChipRobotCount
	}
	return 0
}

func (m *CMD_S_GameStart) GetLUserMaxScore() int64 {
	if m != nil {
		return m.LUserMaxScore
	}
	return 0
}

func (m *CMD_S_GameStart) GetLUserScore() int64 {
	if m != nil {
		return m.LUserScore
	}
	return 0
}

func (m *CMD_S_GameStart) GetNRoundCount() int32 {
	if m != nil {
		return m.NRoundCount
	}
	return 0
}

//开始下注
type CMD_S_StartPlaceJetton struct {
	DeskData         *GameDeskInfo `protobuf:"bytes,1,req,name=DeskData" json:"DeskData,omitempty"`
	RoundId          string        `protobuf:"bytes,2,req,name=roundId" json:"roundId"`
	CbPlaceTime      int32         `protobuf:"varint,3,req,name=cbPlaceTime" json:"cbPlaceTime"`
	CbTimeLeave      int32         `protobuf:"varint,4,req,name=cbTimeLeave" json:"cbTimeLeave"`
	LUserMaxScore    int64         `protobuf:"varint,5,req,name=lUserMaxScore" json:"lUserMaxScore"`
	LUserScore       int64         `protobuf:"varint,6,req,name=lUserScore" json:"lUserScore"`
	Verificationcode int32         `protobuf:"varint,7,req,name=verificationcode" json:"verificationcode"`
}

func (m *CMD_S_StartPlaceJetton) Reset()         { *m = CMD_S_StartPlaceJetton{} }
func (m *CMD_S_StartPlaceJetton) String() string { return proto.CompactTextString(m) }
func (*CMD_S_StartPlaceJetton) ProtoMessage()    {}
func (*CMD_S_StartPlaceJetton) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{10}
}
func (m *CMD_S_StartPlaceJetton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_S_StartPlaceJetton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_S_StartPlaceJetton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_S_StartPlaceJetton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_S_StartPlaceJetton.Merge(m, src)
}
func (m *CMD_S_StartPlaceJetton) XXX_Size() int {
	return m.Size()
}
func (m *CMD_S_StartPlaceJetton) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_S_StartPlaceJetton.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_S_StartPlaceJetton proto.InternalMessageInfo

func (m *CMD_S_StartPlaceJetton) GetDeskData() *GameDeskInfo {
	if m != nil {
		return m.DeskData
	}
	return nil
}

func (m *CMD_S_StartPlaceJetton) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *CMD_S_StartPlaceJetton) GetCbPlaceTime() int32 {
	if m != nil {
		return m.CbPlaceTime
	}
	return 0
}

func (m *CMD_S_StartPlaceJetton) GetCbTimeLeave() int32 {
	if m != nil {
		return m.CbTimeLeave
	}
	return 0
}

func (m *CMD_S_StartPlaceJetton) GetLUserMaxScore() int64 {
	if m != nil {
		return m.LUserMaxScore
	}
	return 0
}

func (m *CMD_S_StartPlaceJetton) GetLUserScore() int64 {
	if m != nil {
		return m.LUserScore
	}
	return 0
}

func (m *CMD_S_StartPlaceJetton) GetVerificationcode() int32 {
	if m != nil {
		return m.Verificationcode
	}
	return 0
}

// 玩家分值数组
type PlayerScoreValue struct {
	UserId      int32 `protobuf:"varint,1,req,name=userId" json:"userId"`
	ReturnScore int64 `protobuf:"varint,2,req,name=returnScore" json:"returnScore"`
	UserScore   int64 `protobuf:"varint,3,opt,name=userScore" json:"userScore"`
}

func (m *PlayerScoreValue) Reset()         { *m = PlayerScoreValue{} }
func (m *PlayerScoreValue) String() string { return proto.CompactTextString(m) }
func (*PlayerScoreValue) ProtoMessage()    {}
func (*PlayerScoreValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{11}
}
func (m *PlayerScoreValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlayerScoreValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PlayerScoreValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PlayerScoreValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerScoreValue.Merge(m, src)
}
func (m *PlayerScoreValue) XXX_Size() int {
	return m.Size()
}
func (m *PlayerScoreValue) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerScoreValue.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerScoreValue proto.InternalMessageInfo

func (m *PlayerScoreValue) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PlayerScoreValue) GetReturnScore() int64 {
	if m != nil {
		return m.ReturnScore
	}
	return 0
}

func (m *PlayerScoreValue) GetUserScore() int64 {
	if m != nil {
		return m.UserScore
	}
	return 0
}

// 命令: 游戏结束.
type CMD_S_GameEnd struct {
	DeskData         *GameDeskInfo       `protobuf:"bytes,1,req,name=DeskData" json:"DeskData,omitempty"`
	RoundId          string              `protobuf:"bytes,2,req,name=roundId" json:"roundId"`
	CbTimeLeave      int32               `protobuf:"varint,3,req,name=cbTimeLeave" json:"cbTimeLeave"`
	GameEndScore     []*PlayerScoreValue `protobuf:"bytes,4,rep,name=gameEndScore" json:"gameEndScore,omitempty"`
	LUserMaxScore    int64               `protobuf:"varint,5,req,name=lUserMaxScore" json:"lUserMaxScore"`
	LUserScore       int64               `protobuf:"varint,6,req,name=lUserScore" json:"lUserScore"`
	LRevenue         int64               `protobuf:"varint,7,req,name=lRevenue" json:"lRevenue"`
	Verificationcode int32               `protobuf:"varint,8,req,name=verificationcode" json:"verificationcode"`
}

func (m *CMD_S_GameEnd) Reset()         { *m = CMD_S_GameEnd{} }
func (m *CMD_S_GameEnd) String() string { return proto.CompactTextString(m) }
func (*CMD_S_GameEnd) ProtoMessage()    {}
func (*CMD_S_GameEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{12}
}
func (m *CMD_S_GameEnd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_S_GameEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_S_GameEnd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_S_GameEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_S_GameEnd.Merge(m, src)
}
func (m *CMD_S_GameEnd) XXX_Size() int {
	return m.Size()
}
func (m *CMD_S_GameEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_S_GameEnd.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_S_GameEnd proto.InternalMessageInfo

func (m *CMD_S_GameEnd) GetDeskData() *GameDeskInfo {
	if m != nil {
		return m.DeskData
	}
	return nil
}

func (m *CMD_S_GameEnd) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *CMD_S_GameEnd) GetCbTimeLeave() int32 {
	if m != nil {
		return m.CbTimeLeave
	}
	return 0
}

func (m *CMD_S_GameEnd) GetGameEndScore() []*PlayerScoreValue {
	if m != nil {
		return m.GameEndScore
	}
	return nil
}

func (m *CMD_S_GameEnd) GetLUserMaxScore() int64 {
	if m != nil {
		return m.LUserMaxScore
	}
	return 0
}

func (m *CMD_S_GameEnd) GetLUserScore() int64 {
	if m != nil {
		return m.LUserScore
	}
	return 0
}

func (m *CMD_S_GameEnd) GetLRevenue() int64 {
	if m != nil {
		return m.LRevenue
	}
	return 0
}

func (m *CMD_S_GameEnd) GetVerificationcode() int32 {
	if m != nil {
		return m.Verificationcode
	}
	return 0
}

// 获取玩家在线列表
type CMD_S_PlayerList struct {
	NEndIndex    int32             `protobuf:"varint,1,req,name=nEndIndex" json:"nEndIndex"`
	NResultCount int32             `protobuf:"varint,2,req,name=nResultCount" json:"nResultCount"`
	Players      []*PlayerListItem `protobuf:"bytes,3,rep,name=players" json:"players,omitempty"`
}

func (m *CMD_S_PlayerList) Reset()         { *m = CMD_S_PlayerList{} }
func (m *CMD_S_PlayerList) String() string { return proto.CompactTextString(m) }
func (*CMD_S_PlayerList) ProtoMessage()    {}
func (*CMD_S_PlayerList) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{13}
}
func (m *CMD_S_PlayerList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_S_PlayerList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_S_PlayerList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_S_PlayerList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_S_PlayerList.Merge(m, src)
}
func (m *CMD_S_PlayerList) XXX_Size() int {
	return m.Size()
}
func (m *CMD_S_PlayerList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_S_PlayerList.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_S_PlayerList proto.InternalMessageInfo

func (m *CMD_S_PlayerList) GetNEndIndex() int32 {
	if m != nil {
		return m.NEndIndex
	}
	return 0
}

func (m *CMD_S_PlayerList) GetNResultCount() int32 {
	if m != nil {
		return m.NResultCount
	}
	return 0
}

func (m *CMD_S_PlayerList) GetPlayers() []*PlayerListItem {
	if m != nil {
		return m.Players
	}
	return nil
}

//
type CMD_S_GameRecord struct {
	LCount  int32   `protobuf:"varint,1,req,name=lCount" json:"lCount"`
	HuCount int32   `protobuf:"varint,2,req,name=huCount" json:"huCount"`
	HeCount int32   `protobuf:"varint,3,req,name=heCount" json:"heCount"`
	Record  []int32 `protobuf:"varint,4,rep,name=record" json:"record,omitempty"`
}

func (m *CMD_S_GameRecord) Reset()         { *m = CMD_S_GameRecord{} }
func (m *CMD_S_GameRecord) String() string { return proto.CompactTextString(m) }
func (*CMD_S_GameRecord) ProtoMessage()    {}
func (*CMD_S_GameRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{14}
}
func (m *CMD_S_GameRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_S_GameRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_S_GameRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_S_GameRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_S_GameRecord.Merge(m, src)
}
func (m *CMD_S_GameRecord) XXX_Size() int {
	return m.Size()
}
func (m *CMD_S_GameRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_S_GameRecord.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_S_GameRecord proto.InternalMessageInfo

func (m *CMD_S_GameRecord) GetLCount() int32 {
	if m != nil {
		return m.LCount
	}
	return 0
}

func (m *CMD_S_GameRecord) GetHuCount() int32 {
	if m != nil {
		return m.HuCount
	}
	return 0
}

func (m *CMD_S_GameRecord) GetHeCount() int32 {
	if m != nil {
		return m.HeCount
	}
	return 0
}

func (m *CMD_S_GameRecord) GetRecord() []int32 {
	if m != nil {
		return m.Record
	}
	return nil
}

// 下注成功.
type CMD_S_PlaceJetSuccess struct {
	DwUserID        int64               `protobuf:"varint,1,req,name=dwUserID" json:"dwUserID"`
	CbJettonArea    int32               `protobuf:"varint,2,req,name=cbJettonArea" json:"cbJettonArea"`
	LJettonScore    int64               `protobuf:"varint,3,req,name=lJettonScore" json:"lJettonScore"`
	BIsAndroid      bool                `protobuf:"varint,4,req,name=bIsAndroid" json:"bIsAndroid"`
	LUserScore      int64               `protobuf:"varint,5,req,name=lUserScore" json:"lUserScore"`
	AllJettonScore  []*PlaceJettonScore `protobuf:"bytes,6,rep,name=AllJettonScore" json:"AllJettonScore,omitempty"`
	SelfJettonScore []*PlaceJettonScore `protobuf:"bytes,7,rep,name=SelfJettonScore" json:"SelfJettonScore,omitempty"`
}

func (m *CMD_S_PlaceJetSuccess) Reset()         { *m = CMD_S_PlaceJetSuccess{} }
func (m *CMD_S_PlaceJetSuccess) String() string { return proto.CompactTextString(m) }
func (*CMD_S_PlaceJetSuccess) ProtoMessage()    {}
func (*CMD_S_PlaceJetSuccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{15}
}
func (m *CMD_S_PlaceJetSuccess) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_S_PlaceJetSuccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_S_PlaceJetSuccess.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_S_PlaceJetSuccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_S_PlaceJetSuccess.Merge(m, src)
}
func (m *CMD_S_PlaceJetSuccess) XXX_Size() int {
	return m.Size()
}
func (m *CMD_S_PlaceJetSuccess) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_S_PlaceJetSuccess.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_S_PlaceJetSuccess proto.InternalMessageInfo

func (m *CMD_S_PlaceJetSuccess) GetDwUserID() int64 {
	if m != nil {
		return m.DwUserID
	}
	return 0
}

func (m *CMD_S_PlaceJetSuccess) GetCbJettonArea() int32 {
	if m != nil {
		return m.CbJettonArea
	}
	return 0
}

func (m *CMD_S_PlaceJetSuccess) GetLJettonScore() int64 {
	if m != nil {
		return m.LJettonScore
	}
	return 0
}

func (m *CMD_S_PlaceJetSuccess) GetBIsAndroid() bool {
	if m != nil {
		return m.BIsAndroid
	}
	return false
}

func (m *CMD_S_PlaceJetSuccess) GetLUserScore() int64 {
	if m != nil {
		return m.LUserScore
	}
	return 0
}

func (m *CMD_S_PlaceJetSuccess) GetAllJettonScore() []*PlaceJettonScore {
	if m != nil {
		return m.AllJettonScore
	}
	return nil
}

func (m *CMD_S_PlaceJetSuccess) GetSelfJettonScore() []*PlaceJettonScore {
	if m != nil {
		return m.SelfJettonScore
	}
	return nil
}

// 下注失败.
type CMD_S_PlaceJettonFail struct {
	DwUserID     int64 `protobuf:"varint,1,req,name=dwUserID" json:"dwUserID"`
	CbJettonArea int32 `protobuf:"varint,2,req,name=cbJettonArea" json:"cbJettonArea"`
	LPlaceScore  int64 `protobuf:"varint,3,req,name=lPlaceScore" json:"lPlaceScore"`
	CbAndroid    int32 `protobuf:"varint,4,req,name=cbAndroid" json:"cbAndroid"`
}

func (m *CMD_S_PlaceJettonFail) Reset()         { *m = CMD_S_PlaceJettonFail{} }
func (m *CMD_S_PlaceJettonFail) String() string { return proto.CompactTextString(m) }
func (*CMD_S_PlaceJettonFail) ProtoMessage()    {}
func (*CMD_S_PlaceJettonFail) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{16}
}
func (m *CMD_S_PlaceJettonFail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_S_PlaceJettonFail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_S_PlaceJettonFail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_S_PlaceJettonFail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_S_PlaceJettonFail.Merge(m, src)
}
func (m *CMD_S_PlaceJettonFail) XXX_Size() int {
	return m.Size()
}
func (m *CMD_S_PlaceJettonFail) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_S_PlaceJettonFail.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_S_PlaceJettonFail proto.InternalMessageInfo

func (m *CMD_S_PlaceJettonFail) GetDwUserID() int64 {
	if m != nil {
		return m.DwUserID
	}
	return 0
}

func (m *CMD_S_PlaceJettonFail) GetCbJettonArea() int32 {
	if m != nil {
		return m.CbJettonArea
	}
	return 0
}

func (m *CMD_S_PlaceJettonFail) GetLPlaceScore() int64 {
	if m != nil {
		return m.LPlaceScore
	}
	return 0
}

func (m *CMD_S_PlaceJettonFail) GetCbAndroid() int32 {
	if m != nil {
		return m.CbAndroid
	}
	return 0
}

type CMD_C_SyncTime_Req struct {
}

func (m *CMD_C_SyncTime_Req) Reset()         { *m = CMD_C_SyncTime_Req{} }
func (m *CMD_C_SyncTime_Req) String() string { return proto.CompactTextString(m) }
func (*CMD_C_SyncTime_Req) ProtoMessage()    {}
func (*CMD_C_SyncTime_Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{17}
}
func (m *CMD_C_SyncTime_Req) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_C_SyncTime_Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_C_SyncTime_Req.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_C_SyncTime_Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_C_SyncTime_Req.Merge(m, src)
}
func (m *CMD_C_SyncTime_Req) XXX_Size() int {
	return m.Size()
}
func (m *CMD_C_SyncTime_Req) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_C_SyncTime_Req.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_C_SyncTime_Req proto.InternalMessageInfo

type CMD_S_SyncTime_Res struct {
	UserId    int64 `protobuf:"varint,1,req,name=userId" json:"userId"`
	Status    int32 `protobuf:"varint,2,req,name=status" json:"status"`
	TimeLeave int32 `protobuf:"varint,3,req,name=timeLeave" json:"timeLeave"`
}

func (m *CMD_S_SyncTime_Res) Reset()         { *m = CMD_S_SyncTime_Res{} }
func (m *CMD_S_SyncTime_Res) String() string { return proto.CompactTextString(m) }
func (*CMD_S_SyncTime_Res) ProtoMessage()    {}
func (*CMD_S_SyncTime_Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a335cf04dd17bf3, []int{18}
}
func (m *CMD_S_SyncTime_Res) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CMD_S_SyncTime_Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CMD_S_SyncTime_Res.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CMD_S_SyncTime_Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMD_S_SyncTime_Res.Merge(m, src)
}
func (m *CMD_S_SyncTime_Res) XXX_Size() int {
	return m.Size()
}
func (m *CMD_S_SyncTime_Res) XXX_DiscardUnknown() {
	xxx_messageInfo_CMD_S_SyncTime_Res.DiscardUnknown(m)
}

var xxx_messageInfo_CMD_S_SyncTime_Res proto.InternalMessageInfo

func (m *CMD_S_SyncTime_Res) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CMD_S_SyncTime_Res) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CMD_S_SyncTime_Res) GetTimeLeave() int32 {
	if m != nil {
		return m.TimeLeave
	}
	return 0
}

func init() {
	proto.RegisterEnum("Longhu.SUBID", SUBID_name, SUBID_value)
	proto.RegisterEnum("Longhu.JET_AREA", JET_AREA_name, JET_AREA_value)
	proto.RegisterEnum("Longhu.CARD_GROUP_TYEP", CARD_GROUP_TYEP_name, CARD_GROUP_TYEP_value)
	proto.RegisterType((*CMD_S_Jetton_Broadcast)(nil), "Longhu.CMD_S_Jetton_Broadcast")
	proto.RegisterType((*CMD_C_PlaceJet)(nil), "Longhu.CMD_C_PlaceJet")
	proto.RegisterType((*PlaceJettonScore)(nil), "Longhu.PlaceJettonScore")
	proto.RegisterType((*CardGroup)(nil), "Longhu.CardGroup")
	proto.RegisterType((*CMD_C_PlayerList)(nil), "Longhu.CMD_C_PlayerList")
	proto.RegisterType((*PlayerListItem)(nil), "Longhu.PlayerListItem")
	proto.RegisterType((*PlaceJetInfo)(nil), "Longhu.PlaceJetInfo")
	proto.RegisterType((*GameDeskInfo)(nil), "Longhu.GameDeskInfo")
	proto.RegisterType((*CMD_Scene_StatusFree)(nil), "Longhu.CMD_Scene_StatusFree")
	proto.RegisterType((*CMD_S_GameStart)(nil), "Longhu.CMD_S_GameStart")
	proto.RegisterType((*CMD_S_StartPlaceJetton)(nil), "Longhu.CMD_S_StartPlaceJetton")
	proto.RegisterType((*PlayerScoreValue)(nil), "Longhu.PlayerScoreValue")
	proto.RegisterType((*CMD_S_GameEnd)(nil), "Longhu.CMD_S_GameEnd")
	proto.RegisterType((*CMD_S_PlayerList)(nil), "Longhu.CMD_S_PlayerList")
	proto.RegisterType((*CMD_S_GameRecord)(nil), "Longhu.CMD_S_GameRecord")
	proto.RegisterType((*CMD_S_PlaceJetSuccess)(nil), "Longhu.CMD_S_PlaceJetSuccess")
	proto.RegisterType((*CMD_S_PlaceJettonFail)(nil), "Longhu.CMD_S_PlaceJettonFail")
	proto.RegisterType((*CMD_C_SyncTime_Req)(nil), "Longhu.CMD_C_SyncTime_Req")
	proto.RegisterType((*CMD_S_SyncTime_Res)(nil), "Longhu.CMD_S_SyncTime_Res")
}

func init() { proto.RegisterFile("Longhu.Message.proto", fileDescriptor_5a335cf04dd17bf3) }

var fileDescriptor_5a335cf04dd17bf3 = []byte{
	// 1623 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x4d, 0x6f, 0xdb, 0x46,
	0x1a, 0x36, 0xf5, 0xad, 0xd7, 0xb6, 0x4c, 0xcf, 0x2a, 0x06, 0x37, 0xc8, 0x2a, 0x02, 0x11, 0x64,
	0x0d, 0x63, 0x61, 0x04, 0x39, 0x2e, 0xf6, 0x10, 0x7d, 0xd0, 0x5e, 0x65, 0x25, 0xdb, 0x4b, 0xca,
	0xbb, 0xeb, 0x13, 0x41, 0x91, 0x13, 0x8b, 0x08, 0x4d, 0x6a, 0xf9, 0x61, 0x47, 0x69, 0x81, 0x16,
	0x3d, 0x14, 0x01, 0x7a, 0x68, 0x51, 0xa0, 0xbf, 0xa3, 0xff, 0xa0, 0xe7, 0x1c, 0x73, 0xec, 0xa9,
	0x2d, 0x92, 0x53, 0x0f, 0x01, 0xfa, 0x13, 0x8a, 0x99, 0x21, 0xa9, 0x21, 0x65, 0x27, 0x6a, 0xd1,
	0x9c, 0x24, 0x3e, 0xcf, 0xcb, 0x77, 0x66, 0x9e, 0xf7, 0x63, 0x5e, 0x42, 0x73, 0xe8, 0xb9, 0xe7,
	0xd3, 0x68, 0x7f, 0x84, 0x83, 0xc0, 0x38, 0xc7, 0xfb, 0x33, 0xdf, 0x0b, 0x3d, 0x54, 0x61, 0xa8,
	0x3c, 0x85, 0x9d, 0xde, 0xa8, 0xaf, 0x6b, 0xfa, 0x63, 0x1c, 0x86, 0x9e, 0xab, 0x77, 0x7d, 0xcf,
	0xb0, 0x4c, 0x23, 0x08, 0xd1, 0x7d, 0x68, 0x74, 0x1c, 0x87, 0xc1, 0x9a, 0xe9, 0xf9, 0x58, 0x12,
	0xda, 0xc5, 0xdd, 0xa2, 0x9a, 0x43, 0x89, 0x5d, 0x78, 0x31, 0xe3, 0xed, 0x0a, 0xcc, 0x2e, 0x8b,
	0xca, 0x16, 0x34, 0xc8, 0x4a, 0x3d, 0xfd, 0xc4, 0x31, 0x4c, 0xfc, 0x18, 0x87, 0x68, 0x17, 0x36,
	0xcc, 0x09, 0x33, 0xe9, 0xf8, 0xd8, 0x90, 0x84, 0x76, 0x61, 0xb7, 0xdc, 0x2d, 0xbd, 0xfc, 0xe1,
	0xee, 0x9a, 0x9a, 0x61, 0x88, 0xa5, 0x93, 0x5d, 0xa1, 0xb0, 0x5b, 0x4c, 0x2c, 0x79, 0x46, 0xfe,
	0x5c, 0x00, 0x31, 0x59, 0x20, 0xdd, 0x62, 0x1b, 0x6a, 0xd6, 0xd5, 0x69, 0x80, 0xfd, 0x41, 0x9f,
	0x2e, 0x92, 0xbc, 0x9a, 0xa2, 0xab, 0x2f, 0x80, 0xee, 0xc3, 0xba, 0xc3, 0xed, 0xb9, 0xc8, 0xed,
	0x99, 0x27, 0x64, 0x0b, 0xea, 0x3d, 0xc3, 0xb7, 0x0e, 0x7d, 0x2f, 0x9a, 0xa1, 0xbb, 0x50, 0x3b,
	0x27, 0x7f, 0x74, 0xdb, 0xca, 0x9c, 0xb2, 0x4a, 0xd1, 0x81, 0x85, 0x9a, 0x50, 0x26, 0xd6, 0x01,
	0xd5, 0xae, 0xac, 0xb2, 0x07, 0xb2, 0x6f, 0xf2, 0x67, 0x3c, 0x9f, 0x61, 0xa9, 0xd8, 0x16, 0xd2,
	0xd7, 0x52, 0x54, 0x9e, 0x80, 0x98, 0x8a, 0x3a, 0xc7, 0xfe, 0xd0, 0xa6, 0x81, 0x5b, 0x77, 0x87,
	0xf6, 0x85, 0x1d, 0xf6, 0xbc, 0xc8, 0x0d, 0x33, 0xeb, 0xf1, 0x04, 0xb5, 0xeb, 0xe2, 0x73, 0xdb,
	0x1d, 0xb8, 0x16, 0x7e, 0x26, 0x15, 0xb8, 0x05, 0x78, 0x42, 0x7e, 0x51, 0x82, 0xc6, 0xc2, 0xfd,
	0x20, 0xc4, 0x17, 0x2b, 0x08, 0xda, 0x86, 0xda, 0x14, 0x1b, 0x16, 0xb5, 0x28, 0x70, 0x3b, 0x48,
	0x51, 0x74, 0x0f, 0xc0, 0x21, 0xc6, 0x4c, 0xf0, 0x22, 0xe7, 0x85, 0xc3, 0x89, 0x1f, 0xd7, 0x36,
	0x9f, 0x1e, 0x19, 0x17, 0x58, 0x2a, 0xb5, 0x85, 0xdd, 0x7a, 0xe2, 0x27, 0x41, 0xd1, 0x3e, 0x6c,
	0x39, 0xe3, 0x2b, 0xec, 0x86, 0xf3, 0xff, 0xda, 0x71, 0xf4, 0xca, 0x6d, 0x21, 0x75, 0x96, 0x27,
	0xb3, 0xf6, 0x4c, 0xa2, 0x0a, 0x77, 0xf4, 0x3c, 0x49, 0x52, 0xc3, 0x0e, 0x2c, 0xfb, 0xd2, 0x76,
	0xf1, 0xc8, 0x08, 0xa7, 0x52, 0x95, 0x33, 0xce, 0x30, 0xe8, 0x36, 0x94, 0x99, 0x94, 0x35, 0xce,
	0x84, 0x41, 0xe4, 0x1c, 0x76, 0xd0, 0x35, 0xdc, 0xa7, 0xd8, 0x97, 0xea, 0x7c, 0x28, 0x13, 0x14,
	0xed, 0xc1, 0xa6, 0x1d, 0x74, 0x66, 0x33, 0x67, 0x1e, 0x9b, 0x01, 0x67, 0x96, 0xa5, 0xd0, 0x03,
	0x10, 0xb9, 0xc7, 0x51, 0xe4, 0x84, 0xb6, 0xb4, 0xce, 0x99, 0x2f, 0xb1, 0xa8, 0x05, 0xd5, 0x38,
	0x3b, 0xa5, 0x0d, 0xce, 0x30, 0x01, 0x49, 0x34, 0x82, 0xe7, 0x43, 0xcf, 0x34, 0x42, 0xdb, 0x73,
	0xa5, 0x4d, 0x4e, 0x69, 0x0e, 0x97, 0x5f, 0x08, 0xb0, 0x91, 0x54, 0xd7, 0xc0, 0x7d, 0xe2, 0x71,
	0xd5, 0x40, 0x93, 0x54, 0xb8, 0xa6, 0x1a, 0x08, 0xc1, 0xd5, 0x17, 0x53, 0x9c, 0x4f, 0x89, 0x0c,
	0xb3, 0x72, 0x7d, 0xbd, 0xad, 0xc0, 0xc6, 0xa1, 0x71, 0x81, 0xfb, 0x38, 0x78, 0x4a, 0xb7, 0xd2,
	0x85, 0x2d, 0xe7, 0x9a, 0x86, 0xb5, 0xfe, 0x50, 0xda, 0x8f, 0x3b, 0x60, 0xbe, 0x2f, 0xa8, 0xf9,
	0x17, 0x88, 0x0f, 0x0d, 0x3b, 0x4f, 0xf2, 0xcd, 0xec, 0x9d, 0x3e, 0x72, 0x2f, 0xa0, 0x03, 0xd8,
	0x66, 0x39, 0xc1, 0x7b, 0x29, 0xbe, 0xc7, 0xcb, 0xf2, 0x2b, 0xe8, 0xef, 0x70, 0xcb, 0xe1, 0xc2,
	0xd8, 0xf3, 0x5c, 0xcb, 0xa6, 0xc1, 0x29, 0x71, 0xa5, 0x72, 0xbd, 0x09, 0xcd, 0x71, 0xa2, 0x12,
	0xad, 0xf6, 0xa4, 0x26, 0x0a, 0x5c, 0x4d, 0x64, 0x49, 0xf4, 0xd7, 0xa4, 0xfd, 0x54, 0xe8, 0x3e,
	0xb7, 0x93, 0x7d, 0xa6, 0x1d, 0x2c, 0xe9, 0x48, 0x0f, 0xa0, 0x3a, 0xa3, 0xad, 0x20, 0x90, 0xaa,
	0xd4, 0x74, 0x87, 0x3b, 0x12, 0xd7, 0x21, 0xd4, 0xc4, 0x0c, 0xfd, 0x0d, 0x1a, 0x57, 0xf1, 0xf6,
	0xa6, 0x86, 0x4d, 0xda, 0x41, 0x8d, 0x0b, 0x69, 0x8e, 0x23, 0x45, 0x60, 0x4e, 0x18, 0x34, 0xb6,
	0x2f, 0x70, 0x20, 0xd5, 0x39, 0xe3, 0x2c, 0x45, 0x0f, 0xc9, 0x9e, 0xd3, 0xc2, 0x87, 0xcc, 0x21,
	0xb3, 0x24, 0xcd, 0x41, 0x06, 0x31, 0xe3, 0xf5, 0x4c, 0x8f, 0xe7, 0x18, 0x52, 0x5e, 0x13, 0xc5,
	0x35, 0x26, 0x0e, 0xd6, 0xe6, 0x49, 0xd1, 0x6e, 0xb4, 0x0b, 0xbb, 0xb5, 0xa4, 0xbc, 0xf2, 0x2c,
	0x39, 0x65, 0xf0, 0x9c, 0xa4, 0xa3, 0xea, 0x79, 0x17, 0xb4, 0x59, 0xf1, 0x25, 0x94, 0xe3, 0xd0,
	0x1d, 0xa8, 0x5c, 0xd9, 0xee, 0xd8, 0x38, 0x97, 0x1a, 0xdc, 0xf1, 0x62, 0x8c, 0xac, 0x7e, 0x65,
	0xbb, 0xa9, 0xf4, 0xb4, 0xb0, 0xb6, 0x38, 0xbb, 0x25, 0x16, 0xed, 0x43, 0x35, 0x2e, 0x48, 0x49,
	0xa4, 0x51, 0x69, 0xe6, 0x13, 0x8d, 0x70, 0x6a, 0x62, 0x84, 0x1e, 0xc2, 0xb6, 0x73, 0xec, 0x3a,
	0xb6, 0x8b, 0x4f, 0xbc, 0x59, 0xe4, 0xb0, 0x9a, 0xdf, 0xe6, 0x96, 0x58, 0xa6, 0xe5, 0x5f, 0x04,
	0x68, 0xd2, 0x49, 0xc1, 0xc4, 0x2e, 0xd6, 0xb5, 0xd0, 0x08, 0xa3, 0xe0, 0xc0, 0xc7, 0x44, 0xac,
	0x1a, 0xa9, 0xc1, 0xbe, 0x11, 0xb2, 0x1b, 0x9c, 0x5b, 0x9d, 0xaf, 0x4f, 0x35, 0xb5, 0x22, 0x25,
	0x6e, 0x4e, 0x48, 0x0c, 0x87, 0xd8, 0xb8, 0xc4, 0x99, 0x5e, 0xc0, 0x13, 0x24, 0x19, 0xe8, 0x4d,
	0x30, 0x32, 0x9e, 0x2d, 0x5f, 0x12, 0x59, 0x2a, 0x77, 0x9b, 0x94, 0x6e, 0xb8, 0x4d, 0x96, 0xc3,
	0x54, 0xbe, 0x39, 0x4c, 0xf2, 0x37, 0x05, 0xd8, 0x62, 0xc3, 0x11, 0x81, 0xb5, 0xd0, 0xf0, 0xc3,
	0x0f, 0x78, 0xda, 0x7d, 0xd8, 0x72, 0x7b, 0x53, 0x7b, 0xa6, 0x7a, 0x13, 0x2f, 0xbe, 0xba, 0xf9,
	0xe6, 0x97, 0x27, 0x97, 0xd5, 0x29, 0xad, 0xaa, 0x4e, 0xf9, 0x06, 0x75, 0xc8, 0x40, 0xa0, 0x7a,
	0x91, 0x6b, 0x25, 0xb7, 0x22, 0x3f, 0x38, 0x2c, 0x08, 0xf9, 0xbb, 0x42, 0x32, 0x34, 0x52, 0x4d,
	0xb8, 0x66, 0xf6, 0x3b, 0xe4, 0x69, 0x41, 0xd5, 0x27, 0xae, 0x07, 0x16, 0x95, 0x26, 0x89, 0x45,
	0x02, 0x32, 0xf9, 0xe8, 0x12, 0x44, 0xaa, 0xec, 0x7d, 0xc0, 0x11, 0x79, 0x99, 0x4b, 0x2b, 0x27,
	0x55, 0x79, 0x55, 0xd9, 0x2a, 0x37, 0xc8, 0xf6, 0x00, 0xc4, 0x4b, 0xec, 0xdb, 0x4f, 0x6c, 0x76,
	0x49, 0x9a, 0x9e, 0x85, 0xa5, 0x2a, 0x5f, 0xaf, 0x79, 0x56, 0xfe, 0x98, 0xce, 0xa8, 0xf3, 0xd8,
	0xc1, 0x7f, 0x0c, 0x27, 0xa2, 0x3d, 0x21, 0x22, 0xa3, 0x53, 0x76, 0x40, 0x8c, 0x31, 0x72, 0x3a,
	0x1f, 0x87, 0x91, 0x7f, 0xcd, 0x78, 0xca, 0x13, 0x48, 0x86, 0x7a, 0xc4, 0xcd, 0x54, 0x8b, 0x31,
	0x68, 0x01, 0xcb, 0x6f, 0x0b, 0xb0, 0xb9, 0x48, 0x6b, 0xc5, 0xb5, 0x3e, 0x54, 0xd4, 0x16, 0xd1,
	0x28, 0xde, 0x14, 0x8d, 0x7f, 0xc0, 0xc6, 0x39, 0xdb, 0x44, 0x92, 0xc3, 0xf9, 0x7b, 0x32, 0xa3,
	0x92, 0x9a, 0xb1, 0xfe, 0x00, 0xb1, 0x6c, 0x43, 0xcd, 0x51, 0xf1, 0x25, 0x76, 0x23, 0x16, 0xc3,
	0x74, 0xb0, 0x4d, 0xd0, 0x6b, 0xa3, 0x5d, 0x7b, 0x67, 0xb4, 0xbf, 0x16, 0xd8, 0x90, 0xae, 0xf1,
	0x43, 0xba, 0x0c, 0x75, 0x57, 0x71, 0x2d, 0x36, 0x2f, 0xf2, 0x11, 0x5f, 0xc0, 0xe4, 0xc2, 0x72,
	0x55, 0x1c, 0x44, 0x4e, 0x78, 0xcd, 0xd0, 0xc4, 0x33, 0xfc, 0xb5, 0x5c, 0x5c, 0xe9, 0x5a, 0x26,
	0x93, 0x9c, 0xb8, 0x48, 0x02, 0x15, 0x9b, 0x9e, 0x6f, 0x91, 0x1c, 0x74, 0x96, 0x3f, 0x1a, 0x62,
	0x8c, 0xc4, 0x7c, 0x1a, 0x2d, 0xef, 0x24, 0x01, 0x29, 0x8f, 0x97, 0x1b, 0x57, 0x02, 0xa2, 0x1d,
	0xa8, 0xf8, 0x74, 0x1d, 0x1a, 0xe5, 0xb2, 0x1a, 0x3f, 0xc9, 0x3f, 0x16, 0xe0, 0x56, 0xaa, 0x0f,
	0xed, 0x24, 0x5a, 0x64, 0x9a, 0x38, 0x08, 0x56, 0xfb, 0x6e, 0xcb, 0x7c, 0x42, 0x16, 0x56, 0xfe,
	0x84, 0x2c, 0xde, 0xf8, 0x85, 0x77, 0x0f, 0x60, 0x32, 0x08, 0x3a, 0xae, 0xe5, 0x7b, 0xb6, 0x45,
	0x1b, 0x49, 0x72, 0xef, 0x73, 0xf8, 0x8a, 0x2d, 0xf5, 0xd1, 0xd2, 0x47, 0x74, 0xe5, 0x3d, 0x93,
	0x60, 0xe3, 0xfd, 0x23, 0x69, 0xf5, 0x37, 0x8e, 0xa4, 0xf2, 0xb7, 0x42, 0x5e, 0xe1, 0xd0, 0x73,
	0x0f, 0x0c, 0xdb, 0xf9, 0x43, 0x15, 0x26, 0x93, 0x3b, 0xf5, 0xbf, 0x2c, 0x30, 0x4f, 0x90, 0xd4,
	0x37, 0x27, 0xbc, 0xbc, 0x69, 0xea, 0xa7, 0xb0, 0xdc, 0x04, 0xc4, 0xbe, 0x6b, 0xb5, 0xb9, 0x6b,
	0x92, 0x76, 0xa1, 0xab, 0xf8, 0xff, 0x72, 0xc8, 0x50, 0x8d, 0x47, 0x83, 0x5c, 0xe7, 0x2c, 0xe6,
	0x3a, 0xe7, 0x1d, 0xa8, 0x04, 0x74, 0x58, 0xc9, 0xec, 0x3c, 0xc6, 0xc8, 0x5e, 0xc2, 0x6b, 0xbb,
	0xd4, 0x02, 0xde, 0xfb, 0xb9, 0x00, 0x65, 0xed, 0xb4, 0x3b, 0xe8, 0xa3, 0x4d, 0xa8, 0x6b, 0xa7,
	0x5d, 0xbd, 0xab, 0x1c, 0x0e, 0x8e, 0xc4, 0x35, 0xb4, 0x03, 0x88, 0x3c, 0xf6, 0xf4, 0x93, 0x61,
	0xa7, 0xa7, 0xe8, 0x8f, 0x95, 0xf1, 0xf8, 0xf8, 0x48, 0xb4, 0xd0, 0x6d, 0xd8, 0x61, 0xf8, 0xbf,
	0x4f, 0x15, 0xf5, 0x8c, 0xb0, 0x67, 0x8a, 0x3a, 0x1c, 0x68, 0x63, 0xf1, 0x1c, 0x35, 0x61, 0x8b,
	0x71, 0xda, 0xd9, 0x51, 0x4f, 0xef, 0x2b, 0xda, 0xbf, 0xc4, 0x2f, 0x05, 0xf4, 0xa7, 0x0c, 0x3a,
	0x1e, 0x8c, 0x14, 0x71, 0x9a, 0x80, 0x1a, 0x07, 0xda, 0x0b, 0xf0, 0xb0, 0x33, 0x52, 0xf4, 0x03,
	0x55, 0x51, 0xc4, 0x67, 0xa8, 0x09, 0x22, 0x07, 0x6a, 0xe3, 0x8e, 0x3a, 0x16, 0xe7, 0xc9, 0xf6,
	0xb4, 0xec, 0xf6, 0x9e, 0x23, 0x04, 0x0d, 0xce, 0x5a, 0x39, 0xea, 0x8b, 0x1f, 0xa1, 0x5b, 0xb0,
	0x1d, 0xaf, 0xa5, 0x1c, 0xf5, 0x75, 0x55, 0xe9, 0x1d, 0xab, 0x7d, 0xf1, 0x13, 0xf4, 0x67, 0x68,
	0xe6, 0x5c, 0xe8, 0x07, 0x9d, 0xc1, 0x50, 0xfc, 0x54, 0x58, 0x50, 0x8b, 0x43, 0xd2, 0x23, 0x7e,
	0x26, 0xa0, 0xbf, 0x80, 0x14, 0x3b, 0x23, 0x3b, 0xc9, 0x2e, 0xff, 0x85, 0x90, 0xc8, 0xa3, 0xc5,
	0x90, 0xde, 0x55, 0x8f, 0x3b, 0xfd, 0x5e, 0x47, 0x1b, 0x8b, 0xfe, 0x9e, 0x0a, 0x35, 0xb2, 0x48,
	0x47, 0x55, 0x3a, 0xa8, 0x01, 0x40, 0x7e, 0x53, 0xb9, 0x37, 0xa0, 0x46, 0x9f, 0xff, 0xa9, 0x28,
	0xa2, 0x40, 0x62, 0x41, 0x9f, 0x86, 0xc7, 0x47, 0x87, 0x62, 0x01, 0xad, 0x43, 0x95, 0x91, 0xa7,
	0x62, 0x31, 0xb5, 0x1c, 0x75, 0xfe, 0x27, 0x96, 0xf6, 0x1e, 0xc1, 0x56, 0xaf, 0xa3, 0xf6, 0xf5,
	0x43, 0xf5, 0xf8, 0xf4, 0x44, 0x1f, 0x9f, 0x29, 0x27, 0xa8, 0x0e, 0xe5, 0xc4, 0x6b, 0x15, 0x8a,
	0xcc, 0x61, 0x0d, 0x4a, 0xb1, 0xaf, 0x0a, 0x14, 0xa8, 0x9b, 0x2a, 0x14, 0x89, 0x3a, 0xa5, 0xae,
	0xf4, 0xf2, 0x75, 0x4b, 0x78, 0xf5, 0xba, 0x25, 0xfc, 0xf4, 0xba, 0x25, 0x7c, 0xf5, 0xa6, 0xb5,
	0xf6, 0xea, 0x4d, 0x6b, 0xed, 0xfb, 0x37, 0xad, 0xb5, 0x5f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x42,
	0xb9, 0x67, 0xf4, 0x5d, 0x13, 0x00, 0x00,
}

func (m *CMD_S_Jetton_Broadcast) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_S_Jetton_Broadcast) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AllJettonScore) > 0 {
		for _, num := range m.AllJettonScore {
			dAtA[i] = 0x8
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(num))
		}
	}
	if len(m.TmpJettonScore) > 0 {
		for _, num := range m.TmpJettonScore {
			dAtA[i] = 0x10
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(num))
		}
	}
	return i, nil
}

func (m *CMD_C_PlaceJet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_C_PlaceJet) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbJettonArea))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LJettonScore))
	return i, nil
}

func (m *PlaceJettonScore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlaceJettonScore) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.DwUserID))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LJettonScore))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LJettonArea))
	return i, nil
}

func (m *CardGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CardGroup) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.GroupId))
	if len(m.Cards) > 0 {
		for _, num := range m.Cards {
			dAtA[i] = 0x10
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(num))
		}
	}
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CardType))
	return i, nil
}

func (m *CMD_C_PlayerList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_C_PlayerList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.NLimitCount))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.NBeginIndex))
	return i, nil
}

func (m *PlayerListItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerListItem) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.DwUserID))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.HeaderID))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserScore))
	dAtA[i] = 0x22
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(len(m.NickName)))
	i += copy(dAtA[i:], m.NickName)
	dAtA[i] = 0x28
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LTwentyWinScore))
	dAtA[i] = 0x30
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LTwentyWinCount))
	dAtA[i] = 0x38
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.IsdivineMath))
	dAtA[i] = 0x40
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.Index))
	dAtA[i] = 0x48
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.IsBanker))
	dAtA[i] = 0x50
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.IsApplyBanker))
	dAtA[i] = 0x58
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.ApplyBankerMulti))
	dAtA[i] = 0x60
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LJetton))
	dAtA[i] = 0x6a
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(len(m.SzLocation)))
	i += copy(dAtA[i:], m.SzLocation)
	return i, nil
}

func (m *PlaceJetInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlaceJetInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LJettonType))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LJettonCount))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LJettonArea))
	return i, nil
}

func (m *GameDeskInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GameDeskInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.LAllJettonScore) > 0 {
		for _, msg := range m.LAllJettonScore {
			dAtA[i] = 0xa
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.SelfJettonScore) > 0 {
		for _, msg := range m.SelfJettonScore {
			dAtA[i] = 0x12
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.DivineJettonScore) > 0 {
		for _, msg := range m.DivineJettonScore {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	dAtA[i] = 0x20
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LApplyBankerCondition))
	dAtA[i] = 0x28
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LAreaLimitScore))
	if len(m.Cards) > 0 {
		for _, msg := range m.Cards {
			dAtA[i] = 0x32
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Players) > 0 {
		for _, msg := range m.Players {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	dAtA[i] = 0x40
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.WBankerChairID))
	dAtA[i] = 0x48
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbBankerTimes))
	dAtA[i] = 0x50
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LBankerWinScore))
	dAtA[i] = 0x58
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LBankerScore))
	dAtA[i] = 0x60
	i++
	if m.BEnableSysBanker {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	dAtA[i] = 0x6a
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(len(m.SzGameRoomName)))
	i += copy(dAtA[i:], m.SzGameRoomName)
	dAtA[i] = 0x70
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.WinTag))
	dAtA[i] = 0x78
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.WinCardGroupType))
	if len(m.JetInfo) > 0 {
		for _, msg := range m.JetInfo {
			dAtA[i] = 0x82
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	dAtA[i] = 0x88
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LOnlinePopulation))
	return i, nil
}

func (m *CMD_Scene_StatusFree) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_Scene_StatusFree) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DeskData == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeskData")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintLonghu_Message(dAtA, i, uint64(m.DeskData.Size()))
		n1, err1 := m.DeskData.MarshalTo(dAtA[i:])
		if err1 != nil {
			return 0, err1
		}
		i += n1
	}
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbTimeLeave))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserMaxScore))
	dAtA[i] = 0x20
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserScore))
	dAtA[i] = 0x2a
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(len(m.SzGameRoomName)))
	i += copy(dAtA[i:], m.SzGameRoomName)
	return i, nil
}

func (m *CMD_S_GameStart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_S_GameStart) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DeskData == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeskData")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintLonghu_Message(dAtA, i, uint64(m.DeskData.Size()))
		n2, err2 := m.DeskData.MarshalTo(dAtA[i:])
		if err2 != nil {
			return 0, err2
		}
		i += n2
	}
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbTimeLeave))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.NChipRobotCount))
	dAtA[i] = 0x20
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserMaxScore))
	dAtA[i] = 0x28
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserScore))
	dAtA[i] = 0x30
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.NRoundCount))
	return i, nil
}

func (m *CMD_S_StartPlaceJetton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_S_StartPlaceJetton) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DeskData == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeskData")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintLonghu_Message(dAtA, i, uint64(m.DeskData.Size()))
		n3, err3 := m.DeskData.MarshalTo(dAtA[i:])
		if err3 != nil {
			return 0, err3
		}
		i += n3
	}
	dAtA[i] = 0x12
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(len(m.RoundId)))
	i += copy(dAtA[i:], m.RoundId)
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbPlaceTime))
	dAtA[i] = 0x20
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbTimeLeave))
	dAtA[i] = 0x28
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserMaxScore))
	dAtA[i] = 0x30
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserScore))
	dAtA[i] = 0x38
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.Verificationcode))
	return i, nil
}

func (m *PlayerScoreValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlayerScoreValue) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.UserId))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.ReturnScore))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.UserScore))
	return i, nil
}

func (m *CMD_S_GameEnd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_S_GameEnd) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DeskData == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeskData")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintLonghu_Message(dAtA, i, uint64(m.DeskData.Size()))
		n4, err4 := m.DeskData.MarshalTo(dAtA[i:])
		if err4 != nil {
			return 0, err4
		}
		i += n4
	}
	dAtA[i] = 0x12
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(len(m.RoundId)))
	i += copy(dAtA[i:], m.RoundId)
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbTimeLeave))
	if len(m.GameEndScore) > 0 {
		for _, msg := range m.GameEndScore {
			dAtA[i] = 0x22
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	dAtA[i] = 0x28
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserMaxScore))
	dAtA[i] = 0x30
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserScore))
	dAtA[i] = 0x38
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LRevenue))
	dAtA[i] = 0x40
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.Verificationcode))
	return i, nil
}

func (m *CMD_S_PlayerList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_S_PlayerList) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.NEndIndex))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.NResultCount))
	if len(m.Players) > 0 {
		for _, msg := range m.Players {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *CMD_S_GameRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_S_GameRecord) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LCount))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.HuCount))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.HeCount))
	if len(m.Record) > 0 {
		for _, num := range m.Record {
			dAtA[i] = 0x20
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(num))
		}
	}
	return i, nil
}

func (m *CMD_S_PlaceJetSuccess) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_S_PlaceJetSuccess) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.DwUserID))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbJettonArea))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LJettonScore))
	dAtA[i] = 0x20
	i++
	if m.BIsAndroid {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	dAtA[i] = 0x28
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LUserScore))
	if len(m.AllJettonScore) > 0 {
		for _, msg := range m.AllJettonScore {
			dAtA[i] = 0x32
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.SelfJettonScore) > 0 {
		for _, msg := range m.SelfJettonScore {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintLonghu_Message(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *CMD_S_PlaceJettonFail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_S_PlaceJettonFail) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.DwUserID))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbJettonArea))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.LPlaceScore))
	dAtA[i] = 0x20
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.CbAndroid))
	return i, nil
}

func (m *CMD_C_SyncTime_Req) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_C_SyncTime_Req) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *CMD_S_SyncTime_Res) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CMD_S_SyncTime_Res) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.UserId))
	dAtA[i] = 0x10
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.Status))
	dAtA[i] = 0x18
	i++
	i = encodeVarintLonghu_Message(dAtA, i, uint64(m.TimeLeave))
	return i, nil
}

func encodeVarintLonghu_Message(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *CMD_S_Jetton_Broadcast) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AllJettonScore) > 0 {
		for _, e := range m.AllJettonScore {
			n += 1 + sovLonghu_Message(uint64(e))
		}
	}
	if len(m.TmpJettonScore) > 0 {
		for _, e := range m.TmpJettonScore {
			n += 1 + sovLonghu_Message(uint64(e))
		}
	}
	return n
}

func (m *CMD_C_PlaceJet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.CbJettonArea))
	n += 1 + sovLonghu_Message(uint64(m.LJettonScore))
	return n
}

func (m *PlaceJettonScore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.DwUserID))
	n += 1 + sovLonghu_Message(uint64(m.LJettonScore))
	n += 1 + sovLonghu_Message(uint64(m.LJettonArea))
	return n
}

func (m *CardGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.GroupId))
	if len(m.Cards) > 0 {
		for _, e := range m.Cards {
			n += 1 + sovLonghu_Message(uint64(e))
		}
	}
	n += 1 + sovLonghu_Message(uint64(m.CardType))
	return n
}

func (m *CMD_C_PlayerList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.NLimitCount))
	n += 1 + sovLonghu_Message(uint64(m.NBeginIndex))
	return n
}

func (m *PlayerListItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.DwUserID))
	n += 1 + sovLonghu_Message(uint64(m.HeaderID))
	n += 1 + sovLonghu_Message(uint64(m.LUserScore))
	l = len(m.NickName)
	n += 1 + l + sovLonghu_Message(uint64(l))
	n += 1 + sovLonghu_Message(uint64(m.LTwentyWinScore))
	n += 1 + sovLonghu_Message(uint64(m.LTwentyWinCount))
	n += 1 + sovLonghu_Message(uint64(m.IsdivineMath))
	n += 1 + sovLonghu_Message(uint64(m.Index))
	n += 1 + sovLonghu_Message(uint64(m.IsBanker))
	n += 1 + sovLonghu_Message(uint64(m.IsApplyBanker))
	n += 1 + sovLonghu_Message(uint64(m.ApplyBankerMulti))
	n += 1 + sovLonghu_Message(uint64(m.LJetton))
	l = len(m.SzLocation)
	n += 1 + l + sovLonghu_Message(uint64(l))
	return n
}

func (m *PlaceJetInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.LJettonType))
	n += 1 + sovLonghu_Message(uint64(m.LJettonCount))
	n += 1 + sovLonghu_Message(uint64(m.LJettonArea))
	return n
}

func (m *GameDeskInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.LAllJettonScore) > 0 {
		for _, e := range m.LAllJettonScore {
			l = e.Size()
			n += 1 + l + sovLonghu_Message(uint64(l))
		}
	}
	if len(m.SelfJettonScore) > 0 {
		for _, e := range m.SelfJettonScore {
			l = e.Size()
			n += 1 + l + sovLonghu_Message(uint64(l))
		}
	}
	if len(m.DivineJettonScore) > 0 {
		for _, e := range m.DivineJettonScore {
			l = e.Size()
			n += 1 + l + sovLonghu_Message(uint64(l))
		}
	}
	n += 1 + sovLonghu_Message(uint64(m.LApplyBankerCondition))
	n += 1 + sovLonghu_Message(uint64(m.LAreaLimitScore))
	if len(m.Cards) > 0 {
		for _, e := range m.Cards {
			l = e.Size()
			n += 1 + l + sovLonghu_Message(uint64(l))
		}
	}
	if len(m.Players) > 0 {
		for _, e := range m.Players {
			l = e.Size()
			n += 1 + l + sovLonghu_Message(uint64(l))
		}
	}
	n += 1 + sovLonghu_Message(uint64(m.WBankerChairID))
	n += 1 + sovLonghu_Message(uint64(m.CbBankerTimes))
	n += 1 + sovLonghu_Message(uint64(m.LBankerWinScore))
	n += 1 + sovLonghu_Message(uint64(m.LBankerScore))
	n += 2
	l = len(m.SzGameRoomName)
	n += 1 + l + sovLonghu_Message(uint64(l))
	n += 1 + sovLonghu_Message(uint64(m.WinTag))
	n += 1 + sovLonghu_Message(uint64(m.WinCardGroupType))
	if len(m.JetInfo) > 0 {
		for _, e := range m.JetInfo {
			l = e.Size()
			n += 2 + l + sovLonghu_Message(uint64(l))
		}
	}
	n += 2 + sovLonghu_Message(uint64(m.LOnlinePopulation))
	return n
}

func (m *CMD_Scene_StatusFree) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DeskData != nil {
		l = m.DeskData.Size()
		n += 1 + l + sovLonghu_Message(uint64(l))
	}
	n += 1 + sovLonghu_Message(uint64(m.CbTimeLeave))
	n += 1 + sovLonghu_Message(uint64(m.LUserMaxScore))
	n += 1 + sovLonghu_Message(uint64(m.LUserScore))
	l = len(m.SzGameRoomName)
	n += 1 + l + sovLonghu_Message(uint64(l))
	return n
}

func (m *CMD_S_GameStart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DeskData != nil {
		l = m.DeskData.Size()
		n += 1 + l + sovLonghu_Message(uint64(l))
	}
	n += 1 + sovLonghu_Message(uint64(m.CbTimeLeave))
	n += 1 + sovLonghu_Message(uint64(m.NChipRobotCount))
	n += 1 + sovLonghu_Message(uint64(m.LUserMaxScore))
	n += 1 + sovLonghu_Message(uint64(m.LUserScore))
	n += 1 + sovLonghu_Message(uint64(m.NRoundCount))
	return n
}

func (m *CMD_S_StartPlaceJetton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DeskData != nil {
		l = m.DeskData.Size()
		n += 1 + l + sovLonghu_Message(uint64(l))
	}
	l = len(m.RoundId)
	n += 1 + l + sovLonghu_Message(uint64(l))
	n += 1 + sovLonghu_Message(uint64(m.CbPlaceTime))
	n += 1 + sovLonghu_Message(uint64(m.CbTimeLeave))
	n += 1 + sovLonghu_Message(uint64(m.LUserMaxScore))
	n += 1 + sovLonghu_Message(uint64(m.LUserScore))
	n += 1 + sovLonghu_Message(uint64(m.Verificationcode))
	return n
}

func (m *PlayerScoreValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.UserId))
	n += 1 + sovLonghu_Message(uint64(m.ReturnScore))
	n += 1 + sovLonghu_Message(uint64(m.UserScore))
	return n
}

func (m *CMD_S_GameEnd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DeskData != nil {
		l = m.DeskData.Size()
		n += 1 + l + sovLonghu_Message(uint64(l))
	}
	l = len(m.RoundId)
	n += 1 + l + sovLonghu_Message(uint64(l))
	n += 1 + sovLonghu_Message(uint64(m.CbTimeLeave))
	if len(m.GameEndScore) > 0 {
		for _, e := range m.GameEndScore {
			l = e.Size()
			n += 1 + l + sovLonghu_Message(uint64(l))
		}
	}
	n += 1 + sovLonghu_Message(uint64(m.LUserMaxScore))
	n += 1 + sovLonghu_Message(uint64(m.LUserScore))
	n += 1 + sovLonghu_Message(uint64(m.LRevenue))
	n += 1 + sovLonghu_Message(uint64(m.Verificationcode))
	return n
}

func (m *CMD_S_PlayerList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.NEndIndex))
	n += 1 + sovLonghu_Message(uint64(m.NResultCount))
	if len(m.Players) > 0 {
		for _, e := range m.Players {
			l = e.Size()
			n += 1 + l + sovLonghu_Message(uint64(l))
		}
	}
	return n
}

func (m *CMD_S_GameRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.LCount))
	n += 1 + sovLonghu_Message(uint64(m.HuCount))
	n += 1 + sovLonghu_Message(uint64(m.HeCount))
	if len(m.Record) > 0 {
		for _, e := range m.Record {
			n += 1 + sovLonghu_Message(uint64(e))
		}
	}
	return n
}

func (m *CMD_S_PlaceJetSuccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.DwUserID))
	n += 1 + sovLonghu_Message(uint64(m.CbJettonArea))
	n += 1 + sovLonghu_Message(uint64(m.LJettonScore))
	n += 2
	n += 1 + sovLonghu_Message(uint64(m.LUserScore))
	if len(m.AllJettonScore) > 0 {
		for _, e := range m.AllJettonScore {
			l = e.Size()
			n += 1 + l + sovLonghu_Message(uint64(l))
		}
	}
	if len(m.SelfJettonScore) > 0 {
		for _, e := range m.SelfJettonScore {
			l = e.Size()
			n += 1 + l + sovLonghu_Message(uint64(l))
		}
	}
	return n
}

func (m *CMD_S_PlaceJettonFail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.DwUserID))
	n += 1 + sovLonghu_Message(uint64(m.CbJettonArea))
	n += 1 + sovLonghu_Message(uint64(m.LPlaceScore))
	n += 1 + sovLonghu_Message(uint64(m.CbAndroid))
	return n
}

func (m *CMD_C_SyncTime_Req) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *CMD_S_SyncTime_Res) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovLonghu_Message(uint64(m.UserId))
	n += 1 + sovLonghu_Message(uint64(m.Status))
	n += 1 + sovLonghu_Message(uint64(m.TimeLeave))
	return n
}

func sovLonghu_Message(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozLonghu_Message(x uint64) (n int) {
	return sovLonghu_Message(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CMD_S_Jetton_Broadcast) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_S_Jetton_Broadcast: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_S_Jetton_Broadcast: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLonghu_Message
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.AllJettonScore = append(m.AllJettonScore, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLonghu_Message
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthLonghu_Message
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthLonghu_Message
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.AllJettonScore) == 0 {
					m.AllJettonScore = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowLonghu_Message
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.AllJettonScore = append(m.AllJettonScore, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field AllJettonScore", wireType)
			}
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLonghu_Message
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.TmpJettonScore = append(m.TmpJettonScore, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLonghu_Message
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthLonghu_Message
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthLonghu_Message
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.TmpJettonScore) == 0 {
					m.TmpJettonScore = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowLonghu_Message
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.TmpJettonScore = append(m.TmpJettonScore, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field TmpJettonScore", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_C_PlaceJet) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_C_PlaceJet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_C_PlaceJet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbJettonArea", wireType)
			}
			m.CbJettonArea = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbJettonArea |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LJettonScore", wireType)
			}
			m.LJettonScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LJettonScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbJettonArea")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lJettonScore")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlaceJettonScore) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlaceJettonScore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlaceJettonScore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DwUserID", wireType)
			}
			m.DwUserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DwUserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LJettonScore", wireType)
			}
			m.LJettonScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LJettonScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LJettonArea", wireType)
			}
			m.LJettonArea = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LJettonArea |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("dwUserID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lJettonScore")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lJettonArea")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CardGroup) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CardGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CardGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
			}
			m.GroupId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GroupId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLonghu_Message
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Cards = append(m.Cards, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLonghu_Message
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthLonghu_Message
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthLonghu_Message
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Cards) == 0 {
					m.Cards = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowLonghu_Message
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Cards = append(m.Cards, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Cards", wireType)
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardType", wireType)
			}
			m.CardType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("group_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_C_PlayerList) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_C_PlayerList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_C_PlayerList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NLimitCount", wireType)
			}
			m.NLimitCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NLimitCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NBeginIndex", wireType)
			}
			m.NBeginIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NBeginIndex |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("nLimitCount")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayerListItem) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerListItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerListItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DwUserID", wireType)
			}
			m.DwUserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DwUserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeaderID", wireType)
			}
			m.HeaderID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeaderID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserScore", wireType)
			}
			m.LUserScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LTwentyWinScore", wireType)
			}
			m.LTwentyWinScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LTwentyWinScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LTwentyWinCount", wireType)
			}
			m.LTwentyWinCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LTwentyWinCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsdivineMath", wireType)
			}
			m.IsdivineMath = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsdivineMath |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			m.Index = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Index |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsBanker", wireType)
			}
			m.IsBanker = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsBanker |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsApplyBanker", wireType)
			}
			m.IsApplyBanker = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IsApplyBanker |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplyBankerMulti", wireType)
			}
			m.ApplyBankerMulti = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApplyBankerMulti |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LJetton", wireType)
			}
			m.LJetton = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LJetton |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SzLocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SzLocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("dwUserID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("headerID")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserScore")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlaceJetInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlaceJetInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlaceJetInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LJettonType", wireType)
			}
			m.LJettonType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LJettonType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LJettonCount", wireType)
			}
			m.LJettonCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LJettonCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LJettonArea", wireType)
			}
			m.LJettonArea = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LJettonArea |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lJettonType")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lJettonCount")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lJettonArea")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GameDeskInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GameDeskInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GameDeskInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LAllJettonScore", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LAllJettonScore = append(m.LAllJettonScore, &PlaceJettonScore{})
			if err := m.LAllJettonScore[len(m.LAllJettonScore)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfJettonScore", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelfJettonScore = append(m.SelfJettonScore, &PlaceJettonScore{})
			if err := m.SelfJettonScore[len(m.SelfJettonScore)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DivineJettonScore", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DivineJettonScore = append(m.DivineJettonScore, &PlaceJettonScore{})
			if err := m.DivineJettonScore[len(m.DivineJettonScore)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LApplyBankerCondition", wireType)
			}
			m.LApplyBankerCondition = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LApplyBankerCondition |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LAreaLimitScore", wireType)
			}
			m.LAreaLimitScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LAreaLimitScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cards = append(m.Cards, &CardGroup{})
			if err := m.Cards[len(m.Cards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Players", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Players = append(m.Players, &PlayerListItem{})
			if err := m.Players[len(m.Players)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WBankerChairID", wireType)
			}
			m.WBankerChairID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WBankerChairID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbBankerTimes", wireType)
			}
			m.CbBankerTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbBankerTimes |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LBankerWinScore", wireType)
			}
			m.LBankerWinScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LBankerWinScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LBankerScore", wireType)
			}
			m.LBankerScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LBankerScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BEnableSysBanker", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BEnableSysBanker = bool(v != 0)
			hasFields[0] |= uint64(0x00000040)
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SzGameRoomName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SzGameRoomName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WinTag", wireType)
			}
			m.WinTag = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WinTag |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000080)
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WinCardGroupType", wireType)
			}
			m.WinCardGroupType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WinCardGroupType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000100)
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JetInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JetInfo = append(m.JetInfo, &PlaceJetInfo{})
			if err := m.JetInfo[len(m.JetInfo)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LOnlinePopulation", wireType)
			}
			m.LOnlinePopulation = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LOnlinePopulation |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000200)
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lApplyBankerCondition")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lAreaLimitScore")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("wBankerChairID")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbBankerTimes")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lBankerWinScore")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lBankerScore")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("bEnableSysBanker")
	}
	if hasFields[0]&uint64(0x00000080) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("winTag")
	}
	if hasFields[0]&uint64(0x00000100) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("winCardGroupType")
	}
	if hasFields[0]&uint64(0x00000200) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lOnlinePopulation")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_Scene_StatusFree) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_Scene_StatusFree: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_Scene_StatusFree: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeskData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeskData == nil {
				m.DeskData = &GameDeskInfo{}
			}
			if err := m.DeskData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbTimeLeave", wireType)
			}
			m.CbTimeLeave = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbTimeLeave |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserMaxScore", wireType)
			}
			m.LUserMaxScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserMaxScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserScore", wireType)
			}
			m.LUserScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SzGameRoomName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SzGameRoomName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeskData")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbTimeLeave")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserMaxScore")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserScore")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_S_GameStart) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_S_GameStart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_S_GameStart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeskData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeskData == nil {
				m.DeskData = &GameDeskInfo{}
			}
			if err := m.DeskData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbTimeLeave", wireType)
			}
			m.CbTimeLeave = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbTimeLeave |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NChipRobotCount", wireType)
			}
			m.NChipRobotCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NChipRobotCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserMaxScore", wireType)
			}
			m.LUserMaxScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserMaxScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserScore", wireType)
			}
			m.LUserScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NRoundCount", wireType)
			}
			m.NRoundCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NRoundCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeskData")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbTimeLeave")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("nChipRobotCount")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserMaxScore")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserScore")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("nRoundCount")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_S_StartPlaceJetton) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_S_StartPlaceJetton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_S_StartPlaceJetton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeskData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeskData == nil {
				m.DeskData = &GameDeskInfo{}
			}
			if err := m.DeskData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoundId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoundId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbPlaceTime", wireType)
			}
			m.CbPlaceTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbPlaceTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbTimeLeave", wireType)
			}
			m.CbTimeLeave = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbTimeLeave |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserMaxScore", wireType)
			}
			m.LUserMaxScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserMaxScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserScore", wireType)
			}
			m.LUserScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verificationcode", wireType)
			}
			m.Verificationcode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Verificationcode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000040)
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeskData")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("roundId")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbPlaceTime")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbTimeLeave")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserMaxScore")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserScore")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("verificationcode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlayerScoreValue) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlayerScoreValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlayerScoreValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReturnScore", wireType)
			}
			m.ReturnScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReturnScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserScore", wireType)
			}
			m.UserScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("userId")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("returnScore")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_S_GameEnd) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_S_GameEnd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_S_GameEnd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeskData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeskData == nil {
				m.DeskData = &GameDeskInfo{}
			}
			if err := m.DeskData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoundId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoundId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbTimeLeave", wireType)
			}
			m.CbTimeLeave = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbTimeLeave |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameEndScore", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GameEndScore = append(m.GameEndScore, &PlayerScoreValue{})
			if err := m.GameEndScore[len(m.GameEndScore)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserMaxScore", wireType)
			}
			m.LUserMaxScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserMaxScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserScore", wireType)
			}
			m.LUserScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LRevenue", wireType)
			}
			m.LRevenue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LRevenue |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verificationcode", wireType)
			}
			m.Verificationcode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Verificationcode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000040)
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeskData")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("roundId")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbTimeLeave")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserMaxScore")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserScore")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lRevenue")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("verificationcode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_S_PlayerList) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_S_PlayerList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_S_PlayerList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NEndIndex", wireType)
			}
			m.NEndIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NEndIndex |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NResultCount", wireType)
			}
			m.NResultCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NResultCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Players", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Players = append(m.Players, &PlayerListItem{})
			if err := m.Players[len(m.Players)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("nEndIndex")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("nResultCount")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_S_GameRecord) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_S_GameRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_S_GameRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LCount", wireType)
			}
			m.LCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HuCount", wireType)
			}
			m.HuCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HuCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeCount", wireType)
			}
			m.HeCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLonghu_Message
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Record = append(m.Record, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLonghu_Message
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthLonghu_Message
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthLonghu_Message
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Record) == 0 {
					m.Record = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowLonghu_Message
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Record = append(m.Record, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Record", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lCount")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("huCount")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("heCount")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_S_PlaceJetSuccess) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_S_PlaceJetSuccess: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_S_PlaceJetSuccess: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DwUserID", wireType)
			}
			m.DwUserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DwUserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbJettonArea", wireType)
			}
			m.CbJettonArea = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbJettonArea |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LJettonScore", wireType)
			}
			m.LJettonScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LJettonScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BIsAndroid", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BIsAndroid = bool(v != 0)
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LUserScore", wireType)
			}
			m.LUserScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LUserScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllJettonScore", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllJettonScore = append(m.AllJettonScore, &PlaceJettonScore{})
			if err := m.AllJettonScore[len(m.AllJettonScore)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfJettonScore", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SelfJettonScore = append(m.SelfJettonScore, &PlaceJettonScore{})
			if err := m.SelfJettonScore[len(m.SelfJettonScore)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("dwUserID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbJettonArea")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lJettonScore")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("bIsAndroid")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lUserScore")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_S_PlaceJettonFail) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_S_PlaceJettonFail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_S_PlaceJettonFail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DwUserID", wireType)
			}
			m.DwUserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DwUserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbJettonArea", wireType)
			}
			m.CbJettonArea = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbJettonArea |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LPlaceScore", wireType)
			}
			m.LPlaceScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LPlaceScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CbAndroid", wireType)
			}
			m.CbAndroid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CbAndroid |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("dwUserID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbJettonArea")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("lPlaceScore")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("cbAndroid")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_C_SyncTime_Req) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_C_SyncTime_Req: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_C_SyncTime_Req: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CMD_S_SyncTime_Res) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CMD_S_SyncTime_Res: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CMD_S_SyncTime_Res: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeLeave", wireType)
			}
			m.TimeLeave = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeLeave |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipLonghu_Message(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLonghu_Message
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("userId")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("status")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("timeLeave")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLonghu_Message(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLonghu_Message
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLonghu_Message
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLonghu_Message
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthLonghu_Message
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowLonghu_Message
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipLonghu_Message(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthLonghu_Message
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthLonghu_Message = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLonghu_Message   = fmt.Errorf("proto: integer overflow")
)
